import { distinctUntilChanged } from 'rxjs/operators';
import { ReplaySubject } from 'rxjs';
export class OrientationInfo {
    constructor(_responsiveState, platformService) {
        this._responsiveState = _responsiveState;
        this._isEnabledForPlatform = null;
        this.replaySubject$ = new ReplaySubject();
        this._isEnabledForPlatform = platformService.isEnabledForPlatform();
    }
    connect() {
        if (this._isEnabledForPlatform) {
            this._subscription = this._responsiveState.orientation$.pipe(distinctUntilChanged())
                .subscribe((data) => {
                this._updateData(data);
            });
        }
        return this.replaySubject$.asObservable();
    }
    disconnect() {
        if (this._isEnabledForPlatform) {
            this._subscription.unsubscribe();
        }
    }
    get getOrientation() {
        return this.replaySubject$.asObservable();
    }
    _updateData(value) {
        this.replaySubject$.next(value);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JpZW50YXRpb24taW5mby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9AZGlyZWN0aXZlcy9kZXZpY2VzL29yaWVudGF0aW9uLWluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQU1yQyxNQUFNLE9BQWdCLGVBQWU7SUFLakMsWUFBc0IsZ0JBQWlDLEVBQ25ELGVBQWdDO1FBRGQscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFpQjtRQUYvQywwQkFBcUIsR0FBWSxJQUFJLENBQUM7UUFDdkMsbUJBQWMsR0FBdUIsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUk1RCxJQUFJLENBQUMscUJBQXFCLEdBQUcsZUFBZSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDeEUsQ0FBQztJQUNNLE9BQU87UUFDVixJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUM1QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7aUJBQ25GLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUNoQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDOUMsQ0FBQztJQUNNLFVBQVU7UUFDYixJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUM1QixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3BDO0lBQ0wsQ0FBQztJQUNELElBQUksY0FBYztRQUNkLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM5QyxDQUFDO0lBQ1MsV0FBVyxDQUFDLEtBQVU7UUFDNUIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBuYW1lIG9yaWVudGF0aW9uLWluZm9cclxuICogQGRlc2NyaXB0aW9uIE9yaWVudGF0aW9uIGFic3RyYWN0IGNsYXNzIGluIG5neC1yZXNwb25zaXZlXHJcbiAqXHJcbiAqIEBsaWNlbnNlIE1JVFxyXG4gKi9cclxuaW1wb3J0IHsgUExBVEZPUk1fSUQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1BsYXRmb3JtQnJvd3NlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IGRpc3RpbmN0VW50aWxDaGFuZ2VkIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBSZXNwb25zaXZlU3RhdGUgfSBmcm9tICcuLi8uLi9AY29yZS9wcm92aWRlcnMvcmVzcG9uc2l2ZS1zdGF0ZS9yZXNwb25zaXZlLXN0YXRlJztcclxuaW1wb3J0IHsgUGxhdGZvcm1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vQGNvcmUvcHJvdmlkZXJzL3BsYXRmb3JtLXNlcnZpY2UvcGxhdGZvcm0uc2VydmljZSc7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgT3JpZW50YXRpb25JbmZvIHtcclxuICAgIHB1YmxpYyBjdXJyZW50c3RhdGU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3N1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xyXG4gICAgcHJpdmF0ZSBfaXNFbmFibGVkRm9yUGxhdGZvcm06IGJvb2xlYW4gPSBudWxsO1xyXG4gICAgcHVibGljIHJlcGxheVN1YmplY3QkOiBSZXBsYXlTdWJqZWN0PGFueT4gPSBuZXcgUmVwbGF5U3ViamVjdCgpO1xyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIF9yZXNwb25zaXZlU3RhdGU6IFJlc3BvbnNpdmVTdGF0ZSxcclxuICAgICAgICBwbGF0Zm9ybVNlcnZpY2U6IFBsYXRmb3JtU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgdGhpcy5faXNFbmFibGVkRm9yUGxhdGZvcm0gPSBwbGF0Zm9ybVNlcnZpY2UuaXNFbmFibGVkRm9yUGxhdGZvcm0oKTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBjb25uZWN0KCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2lzRW5hYmxlZEZvclBsYXRmb3JtKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbiA9IHRoaXMuX3Jlc3BvbnNpdmVTdGF0ZS5vcmllbnRhdGlvbiQucGlwZShkaXN0aW5jdFVudGlsQ2hhbmdlZCgpKVxyXG4gICAgICAgICAgICAuc3Vic2NyaWJlKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl91cGRhdGVEYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVwbGF5U3ViamVjdCQuYXNPYnNlcnZhYmxlKCk7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZGlzY29ubmVjdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5faXNFbmFibGVkRm9yUGxhdGZvcm0pIHtcclxuICAgICAgICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZ2V0IGdldE9yaWVudGF0aW9uKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVwbGF5U3ViamVjdCQuYXNPYnNlcnZhYmxlKCk7XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgX3VwZGF0ZURhdGEodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucmVwbGF5U3ViamVjdCQubmV4dCh2YWx1ZSk7XHJcbiAgICB9XHJcbn1cclxuIl19